/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { INT, INTInterface } from "../INT";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "TotalTokenStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "Whitelist",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addressWhitelistStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ff738038062001ff78339818101604052810190620000379190620004d8565b6040518060400160405280600c81526020017f496e7465726e20746f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f494e5400000000000000000000000000000000000000000000000000000000008152508160059080519060200190620000bb929190620003e8565b508060069080519060200190620000d4929190620003e8565b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160046000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615153373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8cdb15df8c7fc4ba52e3cfca4d263f93453b8f8b6819f594f8bd8a6500e37e9360405160405180910390a450506200026f600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826200027660201b60201c565b50620006ac565b33600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662000306576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002fd906200056b565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620003579190620005bc565b9250508190555081600080828254620003719190620005bc565b92505081905550600115158373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0ba39d0e721f6e2afce28503630b1792db1072f0d02b683eee5b7f64fda9f3b385604051620003db91906200062a565b60405180910390a4505050565b828054620003f69062000676565b90600052602060002090601f0160209004810192826200041a576000855562000466565b82601f106200043557805160ff191683800117855562000466565b8280016001018555821562000466579182015b828111156200046557825182559160200191906001019062000448565b5b50905062000475919062000479565b5090565b5b80821115620004945760008160009055506001016200047a565b5090565b600080fd5b6000819050919050565b620004b2816200049d565b8114620004be57600080fd5b50565b600081519050620004d281620004a7565b92915050565b600060208284031215620004f157620004f062000498565b5b60006200050184828501620004c1565b91505092915050565b600082825260208201905092915050565b7f796f7520617265206e6f742077686974656c6973746564210000000000000000600082015250565b6000620005536018836200050a565b915062000560826200051b565b602082019050919050565b60006020820190508181036000830152620005868162000544565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620005c9826200049d565b9150620005d6836200049d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200060e576200060d6200058d565b5b828201905092915050565b62000624816200049d565b82525050565b600060208201905062000641600083018462000619565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200068f57607f821691505b60208210811415620006a657620006a562000647565b5b50919050565b61193b80620006bc6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a08231116100975780639dc29fac116100665780639dc29fac14610260578063a9059cbb1461027c578063dd62ed3e14610298578063e43252d7146102c8576100f5565b806370a08231146101d85780638ab1d681146102085780638da5cb5b1461022457806395d89b4114610242576100f5565b806323b872dd116100d357806323b872dd14610152578063313ce5671461016e57806332e2e5541461018c57806340c10f19146101bc576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610134575b600080fd5b6101026102e4565b60405161010f919061131e565b60405180910390f35b610132600480360381019061012d91906113d9565b610376565b005b61013c610385565b6040516101499190611428565b60405180910390f35b61016c60048036038101906101679190611443565b61038e565b005b610176610650565b6040516101839190611428565b60405180910390f35b6101a660048036038101906101a19190611496565b610659565b6040516101b391906114de565b60405180910390f35b6101d660048036038101906101d191906113d9565b6106af565b005b6101f260048036038101906101ed9190611496565b610818565b6040516101ff9190611428565b60405180910390f35b610222600480360381019061021d9190611496565b610861565b005b61022c610b10565b6040516102399190611508565b60405180910390f35b61024a610b36565b604051610257919061131e565b60405180910390f35b61027a600480360381019061027591906113d9565b610bc8565b005b610296600480360381019061029191906113d9565b610d80565b005b6102b260048036038101906102ad9190611523565b610eef565b6040516102bf9190611428565b60405180910390f35b6102e260048036038101906102dd9190611496565b610f76565b005b6060600580546102f390611592565b80601f016020809104026020016040519081016040528092919081815260200182805461031f90611592565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b5050505050905090565b610381823383611195565b5050565b60008054905090565b82818061039a83610818565b10156103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d290611610565b60405180910390fd5b6103e6858585611280565b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c9061167c565b60405180910390fd5b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053191906116cb565b9250508190555082600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058791906116cb565b9250508190555082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105dd91906116ff565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106419190611428565b60405180910390a35050505050565b60006012905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b33600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661073c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610733906117a1565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078b91906116ff565b92505081905550816000808282546107a391906116ff565b92505081905550600115158373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0ba39d0e721f6e2afce28503630b1792db1072f0d02b683eee5b7f64fda9f3b38560405161080b9190611428565b60405180910390a4505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b33600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e5906117a1565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661097a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109719061180d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0290611879565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615158273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8cdb15df8c7fc4ba52e3cfca4d263f93453b8f8b6819f594f8bd8a6500e37e9360405160405180910390a45050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054610b4590611592565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7190611592565b8015610bbe5780601f10610b9357610100808354040283529160200191610bbe565b820191906000526020600020905b815481529060010190602001808311610ba157829003601f168201915b5050505050905090565b33600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4c906117a1565b60405180910390fd5b828280610c6183610818565b1015610ca2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9990611610565b60405180910390fd5b83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cf191906116cb565b9250508190555083600080828254610d0991906116cb565b92505081905550600015158573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0ba39d0e721f6e2afce28503630b1792db1072f0d02b683eee5b7f64fda9f3b387604051610d719190611428565b60405180910390a45050505050565b338180610d8c83610818565b1015610dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc490611610565b60405180910390fd5b610dd8338585611280565b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e2791906116cb565b9250508190555082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e7d91906116ff565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610ee19190611428565b60405180910390a350505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b33600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611003576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffa906117a1565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611090576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611087906118e5565b60405180910390fd5b6001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615158273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8cdb15df8c7fc4ba52e3cfca4d263f93453b8f8b6819f594f8bd8a6500e37e9360405160405180910390a45050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f6e11fb1b7f119e3f2fa29896ef5fdf8b8a2d0d4df6fe90ba8668e7d8b2ffa25e836040516112739190611428565b60405180910390a3505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112bf5780820151818401526020810190506112a4565b838111156112ce576000848401525b50505050565b6000601f19601f8301169050919050565b60006112f082611285565b6112fa8185611290565b935061130a8185602086016112a1565b611313816112d4565b840191505092915050565b6000602082019050818103600083015261133881846112e5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061137082611345565b9050919050565b61138081611365565b811461138b57600080fd5b50565b60008135905061139d81611377565b92915050565b6000819050919050565b6113b6816113a3565b81146113c157600080fd5b50565b6000813590506113d3816113ad565b92915050565b600080604083850312156113f0576113ef611340565b5b60006113fe8582860161138e565b925050602061140f858286016113c4565b9150509250929050565b611422816113a3565b82525050565b600060208201905061143d6000830184611419565b92915050565b60008060006060848603121561145c5761145b611340565b5b600061146a8682870161138e565b935050602061147b8682870161138e565b925050604061148c868287016113c4565b9150509250925092565b6000602082840312156114ac576114ab611340565b5b60006114ba8482850161138e565b91505092915050565b60008115159050919050565b6114d8816114c3565b82525050565b60006020820190506114f360008301846114cf565b92915050565b61150281611365565b82525050565b600060208201905061151d60008301846114f9565b92915050565b6000806040838503121561153a57611539611340565b5b60006115488582860161138e565b92505060206115598582860161138e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806115aa57607f821691505b602082108114156115be576115bd611563565b5b50919050565b7f6e6f7420656e6f75676820746f6b656e73210000000000000000000000000000600082015250565b60006115fa601283611290565b9150611605826115c4565b602082019050919050565b60006020820190508181036000830152611629816115ed565b9050919050565b7f636865636b20616c6c6f77616e63652100000000000000000000000000000000600082015250565b6000611666601083611290565b915061167182611630565b602082019050919050565b6000602082019050818103600083015261169581611659565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116d6826113a3565b91506116e1836113a3565b9250828210156116f4576116f361169c565b5b828203905092915050565b600061170a826113a3565b9150611715836113a3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561174a5761174961169c565b5b828201905092915050565b7f796f7520617265206e6f742077686974656c6973746564210000000000000000600082015250565b600061178b601883611290565b915061179682611755565b602082019050919050565b600060208201905081810360008301526117ba8161177e565b9050919050565b7f61646472657373206973206e6f742077686974656c6973746564207965742100600082015250565b60006117f7601f83611290565b9150611802826117c1565b602082019050919050565b60006020820190508181036000830152611826816117ea565b9050919050565b7f6f776e65722063616e27742062652064656c6574656421000000000000000000600082015250565b6000611863601783611290565b915061186e8261182d565b602082019050919050565b6000602082019050818103600083015261189281611856565b9050919050565b7f6164647265737320697320616c72656164792077686974656c69737465642100600082015250565b60006118cf601f83611290565b91506118da82611899565b602082019050919050565b600060208201905081810360008301526118fe816118c2565b905091905056fea2646970667358221220a52b76c4038d6e155cea7e58a33a889ab73fd8e80a21c7aeaa24ccb77f1a4bfc64736f6c63430008090033";

type INTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: INTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class INT__factory extends ContractFactory {
  constructor(...args: INTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<INT> {
    return super.deploy(initialSupply, overrides || {}) as Promise<INT>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): INT {
    return super.attach(address) as INT;
  }
  override connect(signer: Signer): INT__factory {
    return super.connect(signer) as INT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): INTInterface {
    return new utils.Interface(_abi) as INTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): INT {
    return new Contract(address, _abi, signerOrProvider) as INT;
  }
}
